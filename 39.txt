class Solution {
public:
    vector<vector<int>> ans;
    vector<int> one;
    int sum = 0, n;
    void dfs(int p, int target, vector<int> candidates)
    {
        if (sum == target) {
            ans.push_back(one);
            return;
        }
        if (sum > target) return;

        for (int i = p; i < n; i ++) {
            one.push_back(candidates[i]);
            sum += candidates[i];
            dfs(i, target, candidates);
            sum -= candidates[i];
            one.pop_back();
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        n = candidates.size();
        dfs(0, target, candidates);
        return ans;
    }
};